/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ZeroExOrderBookFlashBorrower,
  ZeroExOrderBookFlashBorrowerInterface,
} from "../../../../contracts/orderbook/arb/ZeroExOrderBookFlashBorrower";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "orderBook_",
        type: "address",
      },
      {
        internalType: "address",
        name: "zeroExExchangeProxy_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "output",
            type: "address",
          },
          {
            internalType: "address",
            name: "input",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minimumInput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maximumInput",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maximumIORatio",
            type: "uint256",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "owner",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "interpreter",
                    type: "address",
                  },
                  {
                    internalType: "EncodedDispatch",
                    name: "dispatch",
                    type: "uint256",
                  },
                  {
                    internalType: "EncodedDispatch",
                    name: "handleIODispatch",
                    type: "uint256",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "token",
                        type: "address",
                      },
                      {
                        internalType: "uint8",
                        name: "decimals",
                        type: "uint8",
                      },
                      {
                        internalType: "uint256",
                        name: "vaultId",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct IO[]",
                    name: "validInputs",
                    type: "tuple[]",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "token",
                        type: "address",
                      },
                      {
                        internalType: "uint8",
                        name: "decimals",
                        type: "uint8",
                      },
                      {
                        internalType: "uint256",
                        name: "vaultId",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct IO[]",
                    name: "validOutputs",
                    type: "tuple[]",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct Order",
                name: "order",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "inputIOIndex",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "outputIOIndex",
                type: "uint256",
              },
            ],
            internalType: "struct TakeOrderConfig[]",
            name: "orders",
            type: "tuple[]",
          },
        ],
        internalType: "struct TakeOrdersConfig",
        name: "takeOrders_",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "zeroExSpender_",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "zeroExData_",
        type: "bytes",
      },
    ],
    name: "arb",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initiator_",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data_",
        type: "bytes",
      },
    ],
    name: "onFlashLoan",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "zeroExExchangeProxy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001d1138038062001d11833981016040819052620000349162000069565b6001600160a01b039182166080521660a052620000a1565b80516001600160a01b03811681146200006457600080fd5b919050565b600080604083850312156200007d57600080fd5b62000088836200004c565b915062000098602084016200004c565b90509250929050565b60805160a051611c29620000e8600039600081816071015261024601526000818160e7015281816102ab0152818161039b015281816103eb01526104dd0152611c296000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806323e30c8b1461004657806391511a421461006c578063ca36a7bb146100b8575b600080fd5b610059610054366004610e2e565b6100cd565b6040519081526020015b60405180910390f35b6100937f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610063565b6100cb6100c6366004610ea6565b610352565b005b60003373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610173576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f466c617368426f72726f7765723a20556e74727573746564206c656e6465720060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff87163014610218576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f466c617368426f72726f7765723a20556e74727573746564206c6f616e20696e60448201527f69746961746f7200000000000000000000000000000000000000000000000000606482015260840161016a565b6000806102278486018661117d565b909250905061026d73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168247610729565b506040517ff7ae043a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063f7ae043a906102e09085906004016114d6565b60408051808303816000875af11580156102fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610322919061166a565b507f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd99a9950505050505050505050565b6000848383604051602001610369939291906119cf565b6040516020818303038152906040529050600085602001602081019061038f9190611ac6565b905060408601356103e67f000000000000000000000000000000000000000000000000000000000000000060006103c960208b018b611ac6565b73ffffffffffffffffffffffffffffffffffffffff169190610759565b6104557f00000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61043860208b018b611ac6565b73ffffffffffffffffffffffffffffffffffffffff16919061095e565b61046b8660006103c960408b0160208c01611ac6565b6104a0867fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61043860408b0160208c01611ac6565b6040517f5cffe9de00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690635cffe9de90610518903090869086908990600401611ae1565b6020604051808303816000875af1158015610537573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055b9190611b20565b5060405133904780156108fc02916000818181858888f19350505050158015610588573d6000803e3d6000fd5b50600061059b6040890160208a01611ac6565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff91909116906370a0823190602401602060405180830381865afa158015610607573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062b9190611b42565b9050801561066557610665338261064860408c0160208d01611ac6565b73ffffffffffffffffffffffffffffffffffffffff169190610a62565b600061067460208a018a611ac6565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff91909116906370a0823190602401602060405180830381865afa1580156106e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107049190611b42565b9050801561071e5761071e338261064860208d018d611ac6565b505050505050505050565b606061074f848484604051806060016040528060298152602001611bcb60299139610ab8565b90505b9392505050565b8015806107f957506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156107d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f79190611b42565b155b610885576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000606482015260840161016a565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526109599084907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610c4e565b505050565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa1580156109d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f99190611b42565b610a039190611b5b565b60405173ffffffffffffffffffffffffffffffffffffffff8516602482015260448101829052909150610a5c9085907f095ea7b300000000000000000000000000000000000000000000000000000000906064016108d7565b50505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526109599084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016108d7565b606082471015610b4a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161016a565b73ffffffffffffffffffffffffffffffffffffffff85163b610bc8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161016a565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610bf19190611b9b565b60006040518083038185875af1925050503d8060008114610c2e576040519150601f19603f3d011682016040523d82523d6000602084013e610c33565b606091505b5091509150610c43828286610d5a565b979650505050505050565b6000610cb0826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610dad9092919063ffffffff16565b8051909150156109595780806020019051810190610cce9190611b20565b610959576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161016a565b60608315610d69575081610752565b825115610d795782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016a9190611bb7565b606061074f8484600085610ab8565b803573ffffffffffffffffffffffffffffffffffffffff81168114610de057600080fd5b919050565b60008083601f840112610df757600080fd5b50813567ffffffffffffffff811115610e0f57600080fd5b602083019150836020828501011115610e2757600080fd5b9250929050565b60008060008060008060a08789031215610e4757600080fd5b610e5087610dbc565b9550610e5e60208801610dbc565b94506040870135935060608701359250608087013567ffffffffffffffff811115610e8857600080fd5b610e9489828a01610de5565b979a9699509497509295939492505050565b60008060008060608587031215610ebc57600080fd5b843567ffffffffffffffff80821115610ed457600080fd5b9086019060c08289031215610ee857600080fd5b819550610ef760208801610dbc565b94506040870135915080821115610f0d57600080fd5b50610f1a87828801610de5565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610f7857610f78610f26565b60405290565b60405160c0810167ffffffffffffffff81118282101715610f7857610f78610f26565b60405160e0810167ffffffffffffffff81118282101715610f7857610f78610f26565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561100b5761100b610f26565b604052919050565b600067ffffffffffffffff82111561102d5761102d610f26565b5060051b60200190565b803560ff81168114610de057600080fd5b600082601f83011261105957600080fd5b8135602061106e61106983611013565b610fc4565b8281526060928302850182019282820191908785111561108d57600080fd5b8387015b858110156110e25781818a0312156110a95760008081fd5b6110b1610f55565b6110ba82610dbc565b81526110c7868301611037565b81870152604082810135908201528452928401928101611091565b5090979650505050505050565b600082601f83011261110057600080fd5b813567ffffffffffffffff81111561111a5761111a610f26565b61114b60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610fc4565b81815284602083860101111561116057600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561119057600080fd5b67ffffffffffffffff80843511156111a757600080fd5b8335840160c081870312156111bb57600080fd5b6111c3610f7e565b6111cc82610dbc565b81526111da60208301610dbc565b60208201526040820135604082015260608201356060820152608082013560808201528260a0830135111561120e57600080fd5b60a08201358201915086601f83011261122657600080fd5b6112336110698335611013565b82358082526020808301929160051b85010189101561125157600080fd5b602084015b6020853560051b8601018110156113c957858135111561127557600080fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0606081833588018d030112156112ab57600080fd5b6112b3610f55565b87602084358901013511156112c757600080fd5b8235870160208101350160e0818e03840112156112e357600080fd5b6112eb610fa1565b92506112f960208201610dbc565b835261130760408201610dbc565b602084015260608101356040840152608081013560608401528860a0820135111561133157600080fd5b6113448d602060a0840135840101611048565b60808401528860c0820135111561135a57600080fd5b61136d8d602060c0840135840101611048565b60a08401528860e0820135111561138357600080fd5b6113968d602060e08401358401016110ef565b60c08401525090815281358601604081810135602080850191909152606090920135908301529084529283019201611256565b5060a08301525093505060208401358110156113e457600080fd5b506113f584602085013585016110ef565b90509250929050565b600081518084526020808501945080840160005b8381101561145d578151805173ffffffffffffffffffffffffffffffffffffffff1688528381015160ff16848901526040908101519088015260609096019590820190600101611412565b509495945050505050565b60005b8381101561148357818101518382015260200161146b565b50506000910152565b600081518084526114a4816020860160208601611468565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000602080835260e0830173ffffffffffffffffffffffffffffffffffffffff80865116838601528286015160408282168188015280880151915060608281890152808901519250826080890152608089015192508260a089015260a0890151925060c080818a01528584518088526101009750878b019150878160051b8c0101898701965060005b82811015611659577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008d8303018452875180518784528a815116888501528a8d8201511660808501528881015160a08501528781015187850152608081015160e0808601526115d26101408601826113fe565b905060a08201517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa080878403018f88015261160d83836113fe565b92508984015193508087840301610120880152505061162c818361148c565b9150508c8201518d850152888201518985015280935050508a880197508a8401935060018101905061155f565b509c9b505050505050505050505050565b6000806040838503121561167d57600080fd5b505080516020909101519092909150565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126116c357600080fd5b830160208101925035905067ffffffffffffffff8111156116e357600080fd5b606081023603821315610e2757600080fd5b8183526000602080850194508260005b8581101561145d5773ffffffffffffffffffffffffffffffffffffffff61172b83610dbc565b16875260ff61173b848401611037565b16878401526040828101359088015260609687019690910190600101611705565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261179157600080fd5b830160208101925035905067ffffffffffffffff8111156117b157600080fd5b803603821315610e2757600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60008383855260208086019550808560051b8301018460005b878110156110e2577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe085840301895281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa188360301811261188357600080fd5b870160608135368390037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff210181126118ba57600080fd5b818652820173ffffffffffffffffffffffffffffffffffffffff806118de83610dbc565b16838801526118ee888301610dbc565b6080828216818a01526040925060a0915082840135828a015260c085850135818b015261191d8286018661168e565b60e08c810152965091506119366101408b0187846116f5565b95506119448386018661168e565b935091507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0808b8803016101008c015261197f8785856116f5565b965061198d8287018761175c565b96509350808b8803016101208c01525050506119aa8484836117c0565b858a0135898b0152948201359190970152505098840198925090830190600101611822565b60408152600073ffffffffffffffffffffffffffffffffffffffff806119f487610dbc565b16604084015280611a0760208801610dbc565b1660608401525060408501356080830152606085013560a0830152608085013560c083015260a08501357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1863603018112611a6157600080fd5b850160208101903567ffffffffffffffff811115611a7e57600080fd5b8060051b3603821315611a9057600080fd5b60c060e0850152611aa661010085018284611809565b9150508281036020840152611abc8185876117c0565b9695505050505050565b600060208284031215611ad857600080fd5b61075282610dbc565b600073ffffffffffffffffffffffffffffffffffffffff808716835280861660208401525083604083015260806060830152611abc608083018461148c565b600060208284031215611b3257600080fd5b8151801515811461075257600080fd5b600060208284031215611b5457600080fd5b5051919050565b80820180821115611b95577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b60008251611bad818460208701611468565b9190910192915050565b602081526000610752602083018461148c56fe416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564a26469706673582212203b53752e167316f3a101a852f17011c1c83cb0330e2082910ec548065b6c060864736f6c63430008110033";

type ZeroExOrderBookFlashBorrowerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZeroExOrderBookFlashBorrowerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZeroExOrderBookFlashBorrower__factory extends ContractFactory {
  constructor(...args: ZeroExOrderBookFlashBorrowerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    orderBook_: PromiseOrValue<string>,
    zeroExExchangeProxy_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ZeroExOrderBookFlashBorrower> {
    return super.deploy(
      orderBook_,
      zeroExExchangeProxy_,
      overrides || {}
    ) as Promise<ZeroExOrderBookFlashBorrower>;
  }
  override getDeployTransaction(
    orderBook_: PromiseOrValue<string>,
    zeroExExchangeProxy_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      orderBook_,
      zeroExExchangeProxy_,
      overrides || {}
    );
  }
  override attach(address: string): ZeroExOrderBookFlashBorrower {
    return super.attach(address) as ZeroExOrderBookFlashBorrower;
  }
  override connect(signer: Signer): ZeroExOrderBookFlashBorrower__factory {
    return super.connect(signer) as ZeroExOrderBookFlashBorrower__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZeroExOrderBookFlashBorrowerInterface {
    return new utils.Interface(_abi) as ZeroExOrderBookFlashBorrowerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZeroExOrderBookFlashBorrower {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ZeroExOrderBookFlashBorrower;
  }
}
